version: "3.7"

services:
  wis2-gc-monitor:
    container_name: wis2-gc-monitor
    image: golfvert/wis2sensorcenterglobalcache:1.0.4
    environment:
      - TZ=Europe/Paris
      - REDIS_URL=redis://redis:6379
      - MQTT_TOPIC=# # Topic to subscribe to with origin/a/wis2/ or cache/a/wis2/ ahead of the MQTT_TOPIC
      - MQTT_GB_BROKER=GlobalBroker_URL   # Global Broker URL URL broker such as mqtts://broker.example.com:8883 or wss://broker.example.com:443
      - MQTT_GB_USERNAME=
      - MQTT_GB_PASSWORD=
      - MQTT_GB_REPUBLISH=true # or false or absent - if true will republish the timed out original messages on:
      - MQTT_GB_REPUBLISH_TOPIC=Something # this topic + the name of the cache (eg monitoring/a/wis2/fra/meteofrance/report/globalservices/cache/dwd). It will publish on the Global Broker. So, write access to it is required.
      - MQTT_LOG=true # or false or absent - if true will log the timed out original messages in the volume defined below. Up to 10 files of 100MB will be created (so 1GB of space is required). Log rotation is implemented.
      - MQTT_DWD_BROKER=DWD_Broker_URL   # DWD Cache URL such as mqtts://broker.cache.com:8883 or wss://broker.cache.com:443
      - MQTT_DWD_USERNAME=
      - MQTT_DWD_PASSWORD=
      - MQTT_JMA_BROKER=JMA_Broker_URL   # JMA Cache URL
      - MQTT_JMA_USERNAME=
      - MQTT_JMA_PASSWORD=
      - DELAY1= # First threshold in second eg 120 second
      - DELAY2=
      - DELAY3=
      - DELAY4=
      - DELAY_ORIG= # when the message from the origin will be deleted from redis (mainly cleaning aspects). DELAY_ORIG must be > at DELAY4
    ports:
      - "1880:1880"
    networks:
      - sensor
    depends_on:
      - redis
    volumes:
      - $HOME/WIS2GlobalCacheMonitoring/log:/data/log
  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --save 20 1
    ports:
      - "6379:6379"
    networks:
      - sensor
    environment:
      - REDIS_URL=redis:6379
    volumes:
      - $HOME/WIS2GlobalCacheMonitoring/redis:/data
networks:
  sensor:
    driver: bridge